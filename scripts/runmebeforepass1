THIS_SCRIPT_PATH="$(readlink -f "$(type -P $0 || echo $0)")"
THIS_SCRIPT_DIR="$(dirname "$THIS_SCRIPT_PATH")"
source $THIS_SCRIPT_DIR/color_messages.sh
trap "interrupted" SIGHUP SIGINT SIGQUIT SIGTERM
color_mesg

version="development"
[ -z "${URL}" ] && URL="http://yaolinux.techozor.fr/sources-base"
echo
msg "$(gettext "This script will run some pre-checks and")"
msg "$(gettext "download missing sources...")"
msg2 "$(gettext "Press 'ENTER' to continue or 'ctrl+c' to exit.")"

read a
# Checking the current directory
[ "`pwd`" == "$HOME/$version" ] || abort "$(gettext "The script must be run from: $HOME/%s")" "$version"

# Checking variables
[ -f ~/.bash_profile ] || abort "$(gettext ".bash_profile file not found.")"
plain "$(gettext "Found .bash_profile file: OK")"

[ -n $CLFS ] || abort "$(gettext "CLFS path is not set.")"
plain "$(gettext "CLFS path is set: %s: OK")" "$CLFS"

[ -n $CLFS_TARGET ] || abort "$(gettext "CLFS_TARGET is not set.")"
plain "$(gettext "CLFS_TARGET is set: %s: OK")" "$CLFS_TARGET"

# Checking the user
[ "$(whoami)" == "clfs" ] || abort "$(gettext "This script MUST be run as 'clfs' user and not as: <%s>")" "$(whoami)"
plain "$(gettext "User 'clfs': OK")"

# Checking Directories
[ -d $CLFS ] || abort "$(gettext "%s directory not found.")" "$CLFS"
plain "$(gettext "Found %s directory: OK")" "$CLFS"
[ -O $CLFS ] || abort "$(gettext "%s is not owned by user 'clfs'.")" "$CLFS"

[ -d $CLFS/sources ] || abort "$(gettext "%s/sources directory not found.")" "$CLFS"
plain "$(gettext "Found %s/sources directory: OK")" "$CLFS"
[ -O $CLFS/sources ] || abort "$(gettext "%s/sources is not owned by user 'clfs'.")" "$CLFS"

[ -d $CLFS/tools ] || abort "$(gettext "%s/tools directory not found.")" "$CLFS"
plain "$(gettext "Found %s/tools directory: OK")" "$CLFS"
[ -O $CLFS/tools ] || abort "$(gettext "%s/tools is not owned by user 'clfs'.")" "$CLFS"

[ -d $CLFS/cross-tools ] || abort "$(gettext "%s/cross-tools directory not found.")" "$CLFS"
plain "$(gettext "Found %s/cross-tools directory: OK")" "$CLFS"
[ -O $CLFS/cross-tools ] || abort "$(gettext "%s/cross-tools is not owned by user 'clfs'.")" "$CLFS"

if [ ! -d $HOME/logs ]; then
    plain "$(gettext "$HOME/logs directory not found. Creating it...")"
    rm -rf $HOME/logs
    mkdir -p $HOME/logs
fi
plain "$(gettext "Directory $HOME/logs: OK")" "$CLFS"

# Checking Links
if [ ! -L /sources ]; then
    error "$(gettext "Missing symbolic link: /sources")"
    abort "$(gettext "Run as root: %s")" "ln -sv $CLFS/sources /sources"
fi
plain "$(gettext "Link /sources: OK")"

if [ ! -L /tools ]; then
    error "$(gettext "Missing symbolic link: /tools")"
    abort "$(gettext "Run as root: %s")" "ln -sv $CLFS/tools /tools"
fi
plain "$(gettext "Link /tools: OK")"

if [ ! -L /cross-tools ]; then
    error "$(gettext "Missing symbolic link: /cross-tools")"
    abort "$(gettext "Run as root: %s")" "ln -sv $CLFS/cross-tools /cross-tools"
fi
plain "$(gettext "Link /cross-tools: OK")"

if [ ! -L $HOME/bin ]; then
    plain "$(gettext "Link $HOME/bin not found. Creating it...")"
	ln -svf $HOME/$version/scripts $HOME/bin
fi
plain "$(gettext "Link $HOME/bin: OK")"

if [ ! -L $HOME/config ]; then
    plain "$(gettext "Link $HOME/config not found. Creating it...")"
	ln -svf $HOME/$version/scripts $HOME/config
fi
plain "$(gettext "Link $HOME/config: OK")"

# Diverse
[ -f $CLFS/sources/.md5sums ] && rm $CLFS/sources/.md5sums
echo
msg "$(gettext "Downloading sources...")"
echo

for i in `cat scripts/wget_yaolinux_package|grep -v ^#|sed "s@  @|@"`
do
	FILE=`echo $i|cut -d "|" -f2`
	MD5SUM=`echo $i|cut -d "|" -f1`
	if [ ! -f $CLFS/sources/$FILE ]; then
		wget --no-check-certificate $URL/$FILE -P $CLFS/sources
	fi
	if [ "$MD5SUM" != "skip" ]; then
		echo "$MD5SUM  $FILE" >> $CLFS/sources/.md5sums
	fi
done
if [ -f $CLFS/sources/.md5sums ]; then
	cd  $CLFS/sources
	md5sum -c .md5sums || exit 1
	cd -
else
    abort "$(gettext "%s/sources/md5sums not found - impossible to verify sources.")" "$CLFS"
fi
echo ""
msg "$(gettext "=====> Successfull configured")"
echo ""
msg "$(gettext "If you read this message you can continue by running:")"
echo ""
plain2 "$(gettext "cd $HOME/$version/cross-tools")"
plain2 "$(gettext "pass")"
echo ""
msg "$(gettext "Well Done!")"
echo "" 
