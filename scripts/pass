#!/bin/bash
#
# Functions
#

abort() {
echo " ===> ERROR: $i"
exit 1
}

#
## Begin
#

if [ -z "$LOG" ]; then
    PASS=`pwd`
    PASS=`basename $PASS`
    LOG=$HOME/logs/$PASS
fi
if [ ! -d $LOG ]; then
	mkdir -p $LOG
fi

if [ ! -f .list ]; then
    LIST="$HOME/bin/.list"
else
	LIST=".list"
fi
for DIR in `cat $LIST`
do
    NAME=`basename $DIR`
    BUILD="yes"
    PKGMK="pkgmk.passes"
    if [ -f ${LOG}/$NAME.log ]; then
        if ( grep "^=======>" ${LOG}/$NAME.log|grep "succeeded"  > /dev/null); then
            BUILD="no"
        else
            BUILD="yes"
        fi
    fi
    if [ "$BUILD" == "yes" ]; then
        cd $DIR
        case $PASS in
            cross-tools)
	    	export CLFS_HOST=$(echo ${MACHTYPE} | sed -e 's/-[^-]*/-cross/') 
		export CLFS_TARGET="x86_64-unknown-linux-gnu" 
		export CLFS_TARGET32="i686-pc-linux-gnu" 
		export BUILD32="-m32" 
		export BUILD64="-m64" 
                PKGMK="pkgmk.passes"
                $PKGMK -cf ../../../bin/pkgmk.conf.passes -kw 2>&1|tee ${LOG}/$NAME.log || exit 1;;
            chroot)
	    	export CC="${CLFS_TARGET}-gcc ${BUILD64}"
		export CXX="${CLFS_TARGET}-g++ ${BUILD64}"
		export AR="${CLFS_TARGET}-ar"
		export AS="${CLFS_TARGET}-as"
		export RANLIB="${CLFS_TARGET}-ranlib"
		export LD="${CLFS_TARGET}-ld"
		export STRIP="${CLFS_TARGET}-strip"
                PKGMK="pkgmk.passes"
                $PKGMK -cf ../../../bin/pkgmk.conf.passes -kw 2>&1|tee ${LOG}/$NAME.log || exit 1;;
            base)
	    	export BUILD32="-m32"
		export BUILD64="-m64"
		export CLFS_TARGET32="i686-pc-linux-gnu"
                PKGMK="pkgmk"
                case $NAME in
		    lib32-xz)
		    	rm -vf /usr/lib64/liblzma.so
			$PKGMK -cf ../../../bin/pkgmk.conf.passes -i -kw 2>&1|tee ${LOG}/$NAME.log || exit 1
			;;
		    file)
		    	rm -vf /usr/bin/file
			$PKGMK -cf ../../../bin/pkgmk.conf.passes -i -kw 2>&1|tee ${LOG}/$NAME.log || exit 1
			;;
		    grep)
		    	rm -vf /bin/grep
			$PKGMK -cf ../../../bin/pkgmk.conf.passes -i -kw 2>&1|tee ${LOG}/$NAME.log || exit 1
			;;
	            util-linux)
		    	rm -vf /usr/include/blkid/blkid.h
			rm -vf /usr/include/libfdisk/libfdisk.h
			rm -vf /usr/include/libmount/libmount.h
			rm -vf /usr/include/libsmartcols/libsmartcols.h
			rm -vf usr/include/uuid/uuid.h
			rm -vf /usr/lib64/libblkid.so
			rm -vf /usr/lib64/libblkid.so.1
			rm -vf /usr/lib64/libblkid.so.1.1.0
			rm -vf /usr/lib64/libmount.so
			rm -vf /usr/lib64/libmount.so.1
			rm -vf /usr/lib64/libmount.so.1.1.0
			rm -vf /usr/lib64/libuuid.so
			rm -vf /usr/lib64/libuuid.so.1
			rm -vf /usr/lib64/libuuid.so.1.3.0

			$PKGMK -cf ../../../bin/pkgmk.conf.passes -i -kw 2>&1|tee ${LOG}/$NAME.log || exit 1
			;;
		    glibc)
			mkdir -pv /usr/include
			$PKGMK -cf ../../../bin/pkgmk.conf.passes -i -kw 2>&1|tee ${LOG}/$NAME.log || exit 1
			;;
                    gcc)
                        $PKGMK -cf ../../../bin/pkgmk.conf.passes -kw 2>&1|tee ${LOG}/$NAME.log || exit 1
			rm -fv /usr/lib{,64}/libgcc_s.so{,.1}
                        rm -fv /usr/lib{,64}/libstdc++.so{,.6}
                        rm -fv /usr/lib{,64}/libstdc++.la
                        rm -fv /usr/lib{,64}/libstdc++.so.6.0.23
			rm -fv /usr/lib{,64}/libstdc++fs.la
			rm -fv /usr/lib{,64}/libstdc++.a
			rm -fv /usr/lib{,64}/libstdc++fs.a
                        $PKGMK -d -cf ../../../bin/pkgmk.conf.passes -i || exit 1
                        for i in *cards.tar*
                        do
                            echo "=======> Installing '$i' succeeded." >> ${LOG}/$NAME.log
                        done
                        ;;
		    e2fsprogs)
		    	for lib in blkid lzma mount uuid
			do
			    ln -svf /tools/lib64/lib$lib.so* /usr/lib64
			done
			ln -svf /tools/include/blkid    /usr/include
			ln -svf /tools/include/libmount /usr/include
			ln -svf /tools/include/uuid     /usr/include
			install -vdm755 /usr/lib64/pkgconfig
			for pc in blkid mount uuid
			do
			    sed 's@tools@usr@g' /tools/lib64/pkgconfig/${pc}.pc \
				> /usr/lib64/pkgconfig/${pc}.pc
			done
			$PKGMK -cf ../../../bin/pkgmk.conf.passes -i -kw 2>&1|tee ${LOG}/$NAME.log || exit 1
			;;
                    bash)
                        $PKGMK -cf ../../../bin/pkgmk.conf.passes -kw 2>&1|tee ${LOG}/$NAME.log || exit 1
                        rm /bin/bash
                        rm /bin/sh
                        echo "need to install bash manually"
                        echo "=======> Installing '$NAME' succeeded." >> ${LOG}/$NAME.log
                        exit 1
                        $PKGMK -d -cf ../../../bin/pkgmk.conf.passes -i
                        ;;
                    coreutils)
                        $PKGMK -cf ../../../bin/pkgmk.conf.passes -kw 2>&1|tee ${LOG}/$NAME.log || exit 1
                        rm -f /usr/bin/env
                        for i in cat echo pwd stty
                        do
                            rm -f /bin/$i
                        done
                        $PKGMK -d -cf ../../../bin/pkgmk.conf.passes -i || exit 1
                        for i in *cards.tar*
                        do
                            echo "=======> Installing '$i' succeeded." >> ${LOG}/$NAME.log
                        done
                        ;;

                    perl)
                        $PKGMK -cf ../../../bin/pkgmk.conf.passes -kw 2>&1|tee ${LOG}/$NAME.log || exit 1
                        rm -f /usr/bin/perl
                        $PKGMK -d -cf ../../../bin/pkgmk.conf.passes -i || exit 1
                        for i in *cards.tar*
                        do
                            echo "=======> Installing '$i' succeeded." >> ${LOG}/$NAME.log
                        done
                        ;;
			
                    systemd)
                        ln -svf /tools/bin/true /usr/bin/xsltproc
			for lib in blkid lzma mount uuid
                        do
                            ln -sfv /tools/lib64/lib$lib.so* /usr/lib64
                        done
			ln -svf /tools/include/blkid    /usr/include
			ln -svf /tools/include/libmount /usr/include
			ln -svf /tools/include/uuid     /usr/include
			for pc in blkid mount uuid
			do
			    sed 's@tools@usr@g' /tools/lib/pkgconfig/${pc}.pc \
                                > /usr/lib/pkgconfig/${pc}.pc
			done
			$PKGMK -cf ../../../bin/pkgmk.conf.passes -i -kw 2>&1|tee ${LOG}/$NAME.log || exit 1
                        rm -vf /usr/bin/xsltproc
                        ;;
			
		    util-linux)
		    	rm -vf /usr/include/{blkid,libmount,uuid}
			for pc in blkid mount uuid
			do
			    rm -vf /usr/lib64/pkgconfig/${pc}.pc
			done
			$PKGMK -cf ../../../bin/pkgmk.conf.passes -kw 2>&1|tee ${LOG}/$NAME.log || exit 1
			for lib in blkid mount uuid                                                                                               
                        do                                                                                                                        
                            rm -vf /usr/lib64/lib${lib}.so*                                                                                         
                        done                                                                                                                      
                        $PKGMK -d -cf ../../../bin/pkgmk.conf.passes -i 2>&1|tee ${LOG}/$NAME.log || exit 1 
			;;
			
                    cards)
                        $PKGMK -cf ../../../bin/pkgmk.conf.passes -kw 2>&1|tee ${LOG}/$NAME.log || exit 1
                        rm -f /var/lib/pkg/pkgadd.conf
                        $PKGMK -d -cf ../../../bin/pkgmk.conf.passes -i || exit 1
                        for i in *cards.tar*
                        do
                            echo "=======> Installing '$i' succeeded." >> ${LOG}/$NAME.log
                        done
                        ;;
                    *)
                        $PKGMK -cf ../../../bin/pkgmk.conf.passes -i -kw 2>&1|tee ${LOG}/$NAME.log || exit 1
                        ;;
                esac;;
            *)
                PKGMK="pkgmk -d -i"
                $PKGMK  2>&1|tee ${LOG}/$NAME.log || exit 1;;
        esac
	if ( grep "^=======>" ${LOG}/$NAME.log|grep "succeeded"  > /dev/null); then
	    echo "done"
	else
	    exit 1
	fi
        if ( grep "^=======>" ${LOG}/$NAME.log| tail -1 |grep "ERROR"  > /dev/null); then
            exit 1
        fi
        cd -
    fi
done
